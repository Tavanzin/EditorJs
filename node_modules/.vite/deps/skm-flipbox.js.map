{
  "version": 3,
  "sources": ["../../skm-flipbox/src/helpers/createElement.js", "../../skm-flipbox/src/lib/Slide.js", "../../skm-flipbox/src/lib/Button.js", "../../skm-flipbox/src/lib/SlideContainer.js", "../../skm-flipbox/src/lib/FlipBox.js", "../../skm-flipbox/src/main.js"],
  "sourcesContent": ["/**\r\n * Helper for making Elements with attributes\r\n *\r\n * @param  {string} tagName           - new Element tag name\r\n * @param  {Array|string} classNames  - list or name of CSS classname(s)\r\n * @param  {object} attributes        - any attributes\r\n * @returns {Element}\r\n */\r\nexport function createElement(tagName, classNames = null, attributes = {}) {\r\n  const el = document.createElement(tagName);\r\n\r\n  if (Array.isArray(classNames)) {\r\n    el.classList.add(...classNames);\r\n  } else if (classNames) {\r\n    el.classList.add(classNames);\r\n  }\r\n\r\n  for (const attrName in attributes) {\r\n    el[attrName] = attributes[attrName];\r\n  }\r\n\r\n  return el;\r\n}\r\n", "import { createElement } from '../helpers/createElement';\r\n\r\nclass Slide {\r\n  constructor({ front, back }, index, total, flipBoxInstance) {\r\n    this.front = front;\r\n    this.back = back;\r\n    this.index = index;\r\n    this.totalSlides = total;\r\n    this.flipBoxInstance = flipBoxInstance;\r\n    this.slideContainer = undefined;\r\n  }\r\n\r\n  flipSlide() {\r\n    if (!this.flipBoxInstance?.editing) {\r\n      const currentSlide = this.slideContainer;\r\n      currentSlide.classList.toggle('reveal');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    this.slideContainer = createElement('div', ['mySlides', 'fade']);\r\n    const slideIndex = createElement('div', ['slideIndex'], {\r\n      innerHTML: `${this.index + 1}/${this.totalSlides}`,\r\n    });\r\n    const frontText = createElement('div', ['front-content', 'editable'], {\r\n      innerHTML: `<div>${this.front}</div>`,\r\n      contentEditable: false,\r\n    });\r\n    const captionText = createElement('div', ['back-content', 'editable'], {\r\n      innerHTML: `<div>${this.back}</div>`,\r\n      contentEditable: false,\r\n    });\r\n\r\n    this.slideContainer.appendChild(slideIndex);\r\n    this.slideContainer.appendChild(frontText);\r\n    this.slideContainer.appendChild(captionText);\r\n    this.slideContainer.addEventListener('click', () => this.flipSlide());\r\n\r\n    if (this.index !== 0) {\r\n      this.slideContainer.style.display = 'none';\r\n    }\r\n    return this.slideContainer;\r\n  }\r\n}\r\n\r\nexport default Slide;\r\n", "import { createElement } from '../helpers/createElement';\r\n\r\nclass Button {\r\n  constructor({ text, onClick, classList, disabled = false }) {\r\n    this.text = text;\r\n    this.onClick = onClick;\r\n    this.classList = classList;\r\n    this.disabled = disabled;\r\n  }\r\n\r\n  render() {\r\n    const button = createElement('button', this.classList, {\r\n      innerHTML: this.text,\r\n      disabled: this.disabled,\r\n    });\r\n    button.addEventListener('click', (event) => {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      this.onClick();\r\n    });\r\n    return button;\r\n  }\r\n}\r\n\r\nexport default Button;\r\n", "import Slide from './Slide';\r\nimport { createElement } from '../helpers/createElement';\r\n\r\nclass SlideContainer {\r\n  constructor({ slides, currentSlideIndex }, flipBoxInstance) {\r\n    this.slides = slides;\r\n    this.currentSlideIndex = currentSlideIndex;\r\n    this.flipBoxInstance = flipBoxInstance;\r\n  }\r\n\r\n  renderEmptySlide() {\r\n    const emptySlide = createElement('div', ['empty-slide'], {\r\n      id: 'skm-empty-slide',\r\n    });\r\n    emptySlide.innerText = 'No slide yet';\r\n    return emptySlide;\r\n  }\r\n\r\n  render() {\r\n    const slideWrapper = createElement('div', ['slideshow-container'], {\r\n      id: 'skm-slider',\r\n    });\r\n\r\n    const totalSlides = this.slides.length;\r\n\r\n    if (totalSlides > 0) {\r\n      this.slides.forEach((slide, index) => {\r\n        const slideComponent = new Slide(\r\n          slide,\r\n          index,\r\n          totalSlides,\r\n          this.flipBoxInstance,\r\n        );\r\n        const slideElement = slideComponent.render();\r\n        slideWrapper.appendChild(slideElement);\r\n      });\r\n    }\r\n\r\n    if (!totalSlides) {\r\n      const emptyPage = this.renderEmptySlide();\r\n      slideWrapper.appendChild(emptyPage);\r\n    }\r\n\r\n    return slideWrapper;\r\n  }\r\n}\r\n\r\nexport default SlideContainer;\r\n", "import Slide from './Slide';\r\nimport Button from './Button';\r\nimport SlideContainer from './SlideContainer';\r\nimport { createElement } from '../helpers/createElement';\r\n\r\nimport './style.css';\r\n\r\nclass SKMFlipBox {\r\n  static get toolbox() {\r\n    return {\r\n      title: 'FlipBox',\r\n      icon: 'FB',\r\n    };\r\n  }\r\n\r\n  static get enableLineBreaks() {\r\n    return true;\r\n  }\r\n\r\n  static get sanitize() {\r\n    return {\r\n      rows: true,\r\n    };\r\n  }\r\n\r\n  constructor({ data, api }) {\r\n    this.api = api;\r\n    this.data = {\r\n      rows: data?.rows ?? [],\r\n    };\r\n    this.widgetWrapper = undefined;\r\n    this.editing = false;\r\n    this.currentSlideIndex = 0;\r\n  }\r\n\r\n  setEditing(value) {\r\n    this.editing = value;\r\n  }\r\n\r\n  render() {\r\n    this.widgetWrapper = createElement('div', ['outer-container']);\r\n    const slideContainer = new SlideContainer(\r\n      {\r\n        slides: this.data.rows,\r\n        currentSlideIndex: this.currentSlideIndex,\r\n      },\r\n      this,\r\n    ).render();\r\n\r\n    const paginationWrapper = this.renderPagination();\r\n    const buttonWrapper = this.renderActions();\r\n\r\n    this.widgetWrapper.appendChild(slideContainer);\r\n    this.widgetWrapper.appendChild(paginationWrapper);\r\n    this.widgetWrapper.appendChild(buttonWrapper);\r\n\r\n    return this.widgetWrapper;\r\n  }\r\n\r\n  renderPagination() {\r\n    const paginationWrapper = createElement('div', ['holder'], {\r\n      id: 'skm-pagination',\r\n    });\r\n    this.data.rows.forEach((_, index) => {\r\n      const dotClass =\r\n        index === this.currentSlideIndex ? ['dot', 'active'] : ['dot'];\r\n      const dot = createElement('span', dotClass, {\r\n        onclick: () => {\r\n          this.currentSlideIndex = index;\r\n          this.showSlide(index);\r\n        },\r\n      });\r\n      paginationWrapper.appendChild(dot);\r\n    });\r\n    return paginationWrapper;\r\n  }\r\n\r\n  renderActions() {\r\n    const addButton = new Button({\r\n      text: 'Add',\r\n      classList: ['action', 'addButton'],\r\n      onClick: () => {\r\n        this.addSlide();\r\n      },\r\n    }).render();\r\n\r\n    const editButton = new Button({\r\n      text: 'Edit',\r\n      disabled: this.editing || this.data.rows.length === 0,\r\n      classList: ['action', 'editIcon'],\r\n      onClick: () => {\r\n        this.editSlide();\r\n      },\r\n    }).render();\r\n\r\n    const saveButton = new Button({\r\n      text: 'Save',\r\n      disabled: !this.editing,\r\n      classList: ['action', 'saveButton'],\r\n      onClick: () => {\r\n        this.saveSlide();\r\n      },\r\n    }).render();\r\n\r\n    const deleteButton = new Button({\r\n      text: 'Delete',\r\n      disabled: this.editing || this.data.rows.length === 0,\r\n      classList: ['action', 'deleteButton'],\r\n      onClick: () => {\r\n        this.deleteSlide();\r\n      },\r\n    }).render();\r\n\r\n    const buttonWrapper = createElement('div', ['button-wrapper']);\r\n    buttonWrapper.appendChild(addButton);\r\n    buttonWrapper.appendChild(editButton);\r\n    buttonWrapper.appendChild(saveButton);\r\n    buttonWrapper.appendChild(deleteButton);\r\n\r\n    return buttonWrapper;\r\n  }\r\n\r\n  addSlide() {\r\n    this.setEditing(false);\r\n    const newSlideIndex = this.data.rows.length;\r\n\r\n    // Remove empty slide if it exists\r\n    const emptySlide = document.getElementById('skm-empty-slide');\r\n    if (emptySlide) {\r\n      emptySlide.remove();\r\n    }\r\n\r\n    // Create a new slide object\r\n    const newSlide = new Slide(\r\n      {\r\n        front: `<h3>New Slide title ${newSlideIndex + 1}</h3>`,\r\n        back: `<div>New Slide Content ${newSlideIndex + 1}</div>`,\r\n      },\r\n      newSlideIndex,\r\n      this.data.rows.length,\r\n      this,\r\n    );\r\n\r\n    // Add the new slide to the data\r\n    const rowsCopy = [...this.data.rows];\r\n    rowsCopy[newSlideIndex] = {\r\n      front: newSlide.front,\r\n      back: newSlide.back,\r\n    };\r\n    this.data.rows = rowsCopy;\r\n\r\n    // Render the new slide and append it to the slider container\r\n    const sliderContainer = document.getElementById('skm-slider');\r\n    const newSlideElement = newSlide.render(newSlideIndex, true);\r\n    sliderContainer.appendChild(newSlideElement);\r\n\r\n    // Create a new pagination dot and append it to the pagination holder\r\n    const paginationHolder = document.getElementById('skm-pagination');\r\n    const newDot = createElement('span', ['dot'], {\r\n      onclick: () => this.showSlide(newSlideIndex),\r\n    });\r\n    paginationHolder.appendChild(newDot);\r\n\r\n    // Show the new slide and update button state\r\n    this.showSlide(newSlideIndex);\r\n    this.updateButtonState();\r\n\r\n    // Update slide indexes\r\n    this.updateIndex();\r\n  }\r\n\r\n  updateIndex() {\r\n    const slides = document.getElementsByClassName('mySlides');\r\n    for (let i = 0; i < slides.length; i++) {\r\n      const slideIndex = slides[i].querySelector('.slideIndex');\r\n      if (slideIndex) {\r\n        slideIndex.innerHTML = `${i + 1}/${this.data.rows.length}`;\r\n      }\r\n    }\r\n  }\r\n\r\n  deleteSlide() {\r\n    const index = this.currentSlideIndex;\r\n\r\n    if (confirm(`Are you sure you want to delete slide ${index + 1}?`)) {\r\n      this.data.rows.splice(index, 1);\r\n\r\n      const slides = document.getElementsByClassName('mySlides');\r\n      const dots = document.getElementsByClassName('dot');\r\n\r\n      slides[index].remove();\r\n      dots[index].remove();\r\n\r\n      // Update slide indexes\r\n      this.updateIndex();\r\n\r\n      // Update currentSlideIndex if needed\r\n      if (index === this.currentSlideIndex) {\r\n        if (this.currentSlideIndex >= slides.length) {\r\n          this.currentSlideIndex = slides.length - 1;\r\n        }\r\n      } else if (index < this.currentSlideIndex) {\r\n        this.currentSlideIndex--;\r\n      }\r\n\r\n      // Update pagination dots\r\n      for (let i = 0; i < dots.length; i++) {\r\n        dots[i].onclick = () => this.showSlide(i);\r\n      }\r\n\r\n      // Show the updated current slide\r\n      this.showSlide(this.currentSlideIndex);\r\n\r\n      this.updateButtonState();\r\n    }\r\n  }\r\n\r\n  editSlide() {\r\n    this.setEditing(true);\r\n\r\n    const slides = document.getElementsByClassName('mySlides');\r\n    const currentSlide = slides[this.currentSlideIndex];\r\n    this.setEditable(currentSlide, true);\r\n\r\n    // Place cursor at the end of the contenteditable element\r\n    const editableFront = currentSlide.querySelector('.front-content');\r\n    const editableBack = currentSlide.querySelector('.back-content');\r\n\r\n    if (currentSlide.classList.contains('reveal')) {\r\n      editableBack.focus();\r\n    } else {\r\n      editableFront.focus();\r\n    }\r\n\r\n    // Place cursor at the end of the contenteditable element for both front and back content\r\n    // const selection = window.getSelection();\r\n    // const anchorNode = selection.anchorNode;\r\n    // if (editableFront.contains(anchorNode)) {\r\n    //   this.setCursorToEnd(editableFront);\r\n    // } else if (editableBack.contains(anchorNode)) {\r\n    //   this.setCursorToEnd(editableBack);\r\n    // }\r\n    this.updateButtonState();\r\n  }\r\n\r\n  // setCursorToEnd(editableArea) {\r\n  //   const range = document.createRange();\r\n  //   const sel = window.getSelection();\r\n  //   range.selectNodeContents(editableArea);\r\n  //   range.collapse(false); // Place cursor at the end\r\n  //   sel.removeAllRanges();\r\n  //   sel.addRange(range);\r\n  // }\r\n\r\n  setEditable(slide, value) {\r\n    slide.querySelector('.front-content').contentEditable = value;\r\n    slide.querySelector('.back-content').contentEditable = value;\r\n\r\n    const editableArea = slide.querySelector('.editable');\r\n    if (value) {\r\n      editableArea.classList.add('focus-visible');\r\n      editableArea.focus();\r\n      editableArea.style.caretColor = 'black';\r\n    }\r\n\r\n    if (!value) {\r\n      editableArea.classList.remove('focus-visible');\r\n    }\r\n  }\r\n\r\n  saveSlide() {\r\n    this.setEditing(false);\r\n    const slides = document.getElementsByClassName('mySlides');\r\n    const currentSlide = slides[this.currentSlideIndex];\r\n    this.setEditable(currentSlide, false);\r\n\r\n    const frontContent = currentSlide.querySelector('.front-content');\r\n    const backContent = currentSlide.querySelector('.back-content');\r\n\r\n    const rowsCopy = [...this.data.rows];\r\n    rowsCopy[this.currentSlideIndex] = {\r\n      front: frontContent.innerHTML,\r\n      back: backContent.innerHTML,\r\n    };\r\n    this.data.rows = rowsCopy;\r\n\r\n    document\r\n      .getElementsByClassName('mySlides')\r\n      [this.currentSlideIndex].classList.remove('isEditing');\r\n\r\n    this.updateButtonState();\r\n  }\r\n\r\n  updateButtonState() {\r\n    const editIcon = this.widgetWrapper.querySelector('.editIcon');\r\n    const saveButton = this.widgetWrapper.querySelector('.saveButton');\r\n    const deleteButton = this.widgetWrapper.querySelector('.deleteButton');\r\n\r\n    if (this.editing) {\r\n      editIcon.disabled = true;\r\n      saveButton.disabled = false;\r\n    } else {\r\n      editIcon.disabled = false;\r\n      saveButton.disabled = true;\r\n    }\r\n\r\n    if (this.data.rows.length) {\r\n      deleteButton.disabled = false;\r\n      editIcon.disabled = false;\r\n    } else {\r\n      deleteButton.disabled = true;\r\n      editIcon.disabled = true;\r\n    }\r\n  }\r\n\r\n  revealSlide(index) {\r\n    if (!this.editing) {\r\n      const slides = document.getElementsByClassName('mySlides');\r\n      const currentSlide = slides[index];\r\n      currentSlide.classList.toggle('reveal');\r\n    }\r\n  }\r\n\r\n  showSlide(index) {\r\n    this.currentSlideIndex = index;\r\n    const slides = document.getElementsByClassName('mySlides');\r\n    const dots = document.getElementsByClassName('dot');\r\n\r\n    for (let i = 0; i < slides.length; i++) {\r\n      if (i === index) {\r\n        slides[i].style.display = 'block';\r\n        slides[i].classList.add('fade');\r\n      } else {\r\n        slides[i].style.display = 'none';\r\n        slides[i].classList.remove('fade');\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < dots.length; i++) {\r\n      if (i === index) {\r\n        dots[i].classList.add('active');\r\n      } else {\r\n        dots[i].classList.remove('active');\r\n      }\r\n    }\r\n  }\r\n\r\n  save(_blockContent) {\r\n    return {\r\n      rows: this.data.rows,\r\n    };\r\n  }\r\n}\r\n\r\nexport default SKMFlipBox;\r\n", "import SKMFlipBox from './lib/FlipBox';\r\n\r\nexport default SKMFlipBox;\r\n"],
  "mappings": "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",
  "names": []
}
